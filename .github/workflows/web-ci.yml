name: Web CI

on:
  push:
    branches: [ main ]
    paths:
      - 'src/web/**'
      - '.github/workflows/web-ci.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'src/web/**'
      - '.github/workflows/web-ci.yml'
  workflow_dispatch:

env:
  NODE_VERSION: '18.x'
  WORKING_DIRECTORY: 'src/web'
  NODE_ENV: 'test'
  VITE_API_URL: 'http://localhost:8000'

jobs:
  build_and_test:
    name: Build and Test
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ${{ env.WORKING_DIRECTORY }}/package-lock.json

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.WORKING_DIRECTORY }}/node_modules
            ~/.npm
          key: npm-deps-${{ hashFiles('src/web/package-lock.json') }}
          restore-keys: |
            npm-deps-

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint
        
      - name: Check TypeScript types
        run: npx tsc --noEmit

      - name: Run tests with coverage
        run: npm run test:coverage
        env:
          CI: true
          JEST_JUNIT_OUTPUT_DIR: ./reports/junit
          JEST_JUNIT_OUTPUT_NAME: jest-junit.xml
          JEST_JUNIT_CLASSNAME_TEMPLATE: "{classname}"
          JEST_JUNIT_TITLE_TEMPLATE: "{title}"

      - name: Build production bundle
        run: npm run build
        env:
          VITE_API_URL: ${{ env.VITE_API_URL }}

      - name: Upload test coverage
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: ${{ env.WORKING_DIRECTORY }}/coverage
          retention-days: 14

      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: ${{ env.WORKING_DIRECTORY }}/reports/junit
          retention-days: 14

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: ${{ env.WORKING_DIRECTORY }}/dist
          retention-days: 14

      - name: Check bundle size
        run: |
          echo "Analyzing bundle size..."
          npm run build -- --mode production
          du -sh dist

  notify:
    needs: build_and_test
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Check build status
        if: ${{ needs.build_and_test.result != 'success' }}
        run: exit 1