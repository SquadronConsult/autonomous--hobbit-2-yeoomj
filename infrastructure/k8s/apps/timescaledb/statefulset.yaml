apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: timescaledb
  namespace: agricultural-system
  labels:
    app.kubernetes.io/name: timescaledb
    app.kubernetes.io/part-of: autonomous-agricultural-management
    app.kubernetes.io/component: database
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/version: "2.11"
  annotations:
    backup.velero.io/schedule: "0 */6 * * *"  # Backup every 6 hours
    backup.velero.io/retention: "90d"  # 90 day retention policy
spec:
  replicas: 2  # Master + 1 replica for high availability
  serviceName: timescaledb
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: timescaledb
  template:
    metadata:
      labels:
        app.kubernetes.io/name: timescaledb
        app.kubernetes.io/part-of: autonomous-agricultural-management
        app.kubernetes.io/component: database
        app.kubernetes.io/version: "2.11"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9187"
    spec:
      securityContext:
        fsGroup: 70  # postgres user
        runAsUser: 70
        runAsGroup: 70
      initContainers:
        - name: init-timescaledb
          image: busybox:1.34
          command:
            - sh
            - -c
            - chown -R 70:70 /var/lib/postgresql/data
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
      containers:
        - name: timescaledb
          image: timescale/timescaledb:2.11
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
              name: postgresql
            - containerPort: 9187
              name: metrics
          resources:
            requests:
              memory: "8Gi"  # Base memory requirement
              cpu: "2"       # 2 CPU cores minimum
            limits:
              memory: "16Gi" # Maximum memory allocation
              cpu: "4"       # Maximum 4 CPU cores
          env:
            - name: POSTGRES_DB
              value: "agricultural_system"
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: timescaledb-credentials
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: timescaledb-credentials
                  key: password
            - name: TIMESCALEDB_TELEMETRY
              value: "off"
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
            - name: timescaledb-config
              mountPath: /etc/postgresql/postgresql.conf
              subPath: postgresql.conf
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - postgres
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - postgres
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
      volumes:
        - name: timescaledb-config
          configMap:
            name: timescaledb-config
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: fast-local-storage  # Using high-performance NVMe storage
        resources:
          requests:
            storage: 500Gi  # 500GB storage as specified